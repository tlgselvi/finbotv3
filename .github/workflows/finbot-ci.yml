name: FinBot CI/CD Pipeline

'on':
  push:
    branches: [main, dev, master]
  pull_request:
    branches: [main, dev, master]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  test:
    name: Test & Quality Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: QuickServeAPI
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: 🔧 Enable Corepack
        run: corepack enable
      
      - name: 📦 Install pnpm
        run: corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      
      - name: 📦 Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: 💾 Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('QuickServeAPI/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: 🧪 Run Critical Tests (Phase 1)
        run: pnpm test1
        
      - name: 📊 Generate SBOM
        run: pnpm sbom:gen
        continue-on-error: true
        
      - name: 🔐 Secrets Scan
        run: pnpm sec:secrets
        continue-on-error: true
        
      - name: 🔒 SAST Scan
        run: pnpm sec:sast
        continue-on-error: true
        
      - name: ⚖️ License Audit
        run: pnpm sec:license
        continue-on-error: true
        
      - name: 📊 Coverage Analysis
        run: pnpm coverage:analyze
        continue-on-error: true
        
      - name: 📊 Generate HTML Report
        run: pnpm report:gen
        if: always()
        continue-on-error: true
        
      - name: 📁 Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-${{ github.sha }}
          path: |
            QuickServeAPI/reports/
            QuickServeAPI/artifacts/
            QuickServeAPI/coverage/
          retention-days: 30
  
  deploy-check:
    name: Deploy Readiness
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: QuickServeAPI
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: 🔧 Enable Corepack
        run: corepack enable
      
      - name: 📦 Install dependencies
        run: corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate && pnpm install --frozen-lockfile
      
      - name: 🚀 Deploy Check
        run: pnpm test:deploy
        continue-on-error: true
      
      - name: 💾 Config Backup
        run: pnpm backup:conf
        continue-on-error: true
        
      - name: ✅ Deploy Ready
        run: echo "🚀 Application is ready for deployment!"
