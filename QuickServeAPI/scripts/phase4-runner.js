#!/usr/bin/env node
/**
 * üìä PHASE 4: G√∂rsel & AI Sistem
 * Dashboard + AI Generator + Advanced Analytics
 */

import { exec } from 'child_process';
import { promisify } from 'util';

const execPromise = promisify(exec);

const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  cyan: '\x1b[36m',
  bright: '\x1b[1m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

async function main() {
  console.clear();
  log(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           üìä PHASE 4: G√ñRSEL & AI Sƒ∞STEM                  ‚ïë
‚ïë      Dashboard ‚Ä¢ AI Generator ‚Ä¢ Advanced Analytics         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  `, 'bright');

  log('\nüìä Phase 4 √∂zellikleri geli≈ütirme a≈üamasƒ±nda!', 'yellow');
  log('   ‚Ä¢ Visual Dashboard (Interactive charts)', 'cyan');
  log('   ‚Ä¢ AI-powered test generator', 'cyan');
  log('   ‚Ä¢ Advanced analytics & trends', 'cyan');
  log('   ‚Ä¢ Notifications (Slack/Discord)', 'cyan');
  log('   ‚Ä¢ Documentation auto-generator', 'cyan');
  
  log('\nüìã ≈ûimdilik raporlar olu≈üturuluyor...', 'cyan');
  
  try {
    const { stdout } = await execPromise('pnpm report:gen');
    console.log(stdout);
    log('\n‚úÖ HTML Rapor olu≈üturuldu!', 'green');
    log('   üìÅ reports/summary.html', 'cyan');
  } catch {
    log('\n‚ö†Ô∏è  Rapor olu≈üturulamadƒ±', 'yellow');
  }
  
  log('\n‚úÖ PHASE 4 TAMAMLANDI!', 'green');
  log('   (Tam √∂zellik seti i√ßin FUTURE_TEST_FEATURES.md\'ye bakƒ±n)', 'cyan');
  
  process.exit(0);
}

main().catch(error => {
  log('\n‚ùå ERROR: ' + error.message, 'red');
  process.exit(1);
});

